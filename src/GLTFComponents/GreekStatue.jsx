/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import * as THREE from 'three'; // Importa a biblioteca Three.js


export function GreekStatue(props) {
  const { nodes, materials } = useGLTF("./3DModels/greekStatue.glb");

  const material = new THREE.ShaderMaterial({
    uniforms: {
      time: { value: 0.0 }
    },
    vertexShader: `
      varying vec3 vNormal;
      varying vec2 vUv;

      void main() {
        vNormal = normal;
        vUv = uv;
        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);
      }
    `,
    fragmentShader: `
      uniform float time;
      varying vec3 vNormal;
      varying vec2 vUv;

      void main() {
        // Use as componentes x, y e z da normal como cores RGB
        vec3 finalColor = vNormal * 0.5 + 0.5;

        gl_FragColor = vec4(finalColor, 1.0);
      }
    `,
  });


  
  return (
    <group {...props} dispose={null}>
      <mesh
        castShadow
        material={material}
        receiveShadow
        geometry={nodes.AnyConvcom__Sculpture_N181213.geometry}
        rotation={[Math.PI, 0, Math.PI]}
 >
      </mesh>
    </group>
  );
}

useGLTF.preload("./3DModels/greekStatue.glb");
